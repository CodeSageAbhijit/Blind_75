/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {

        vector<vector<int>> result;
        if (!root)
            return result;

        queue<TreeNode*> Queue;

        int queLength;

        Queue.push(root);

        while (!Queue.empty()) {
            queLength = Queue.size();
            vector<int> Level;
            for (int i = 0; i < queLength; i++) {
                TreeNode* Node = Queue.front();
                Queue.pop();
                Level.push_back(Node->val);

                if (Node->left)
                    Queue.push(Node->left);
                if (Node->right)
                    Queue.push(Node->right);
            }

            result.push_back(Level);
        }
        return result;
    }
};
