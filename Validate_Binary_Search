/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    bool Validate(TreeNode* node, long long left, long long right) {
        if (!node) {
            return true;
        }
        // Ensure that the current node's value is within the valid range
        if (!(node->val < right && node->val > left)) {
            return false;
        }

        // Recursively validate the left and right subtrees with updated bounds
        return Validate(node->left, left, node->val) &&
               Validate(node->right, node->val, right);
    }

    bool isValidBST(TreeNode* root) {
        return Validate(root, LONG_MIN, LONG_MAX);
    }
};
