#include <vector>
#include <climits>  // For INT_MIN
#include <algorithm>  // For std::max

using namespace std;

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if (nums.empty()) return 0;

        int maxi = INT_MIN;
        long long prod = 1;

        // Forward pass
        for (int i = 0; i < nums.size(); i++) {
            prod *= nums[i];
            maxi = max(prod, static_cast<long long>(maxi));

            // Reset the product to 1 if it is zero or exceeds limits
            if (prod == 0 || prod > LLONG_MAX / 10 || prod < LLONG_MIN / 10) {
                prod = 1;
            }
        }

        prod = 1;

        // Backward pass
        for (int i = nums.size() - 1; i >= 0; i--) {
            prod *= nums[i];
            maxi = max(prod, static_cast<long long>(maxi));

            // Reset the product to 1 if it is zero or exceeds limits
            if (prod == 0 || prod > LLONG_MAX / 10 || prod < LLONG_MIN / 10) {
                prod = 1;
            }
        }

        return static_cast<int>(maxi);
    }
};
