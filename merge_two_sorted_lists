class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        // Create a dummy node to start the merged list
        ListNode* newnode = new ListNode(INT_MIN);
        ListNode* head = newnode;  // This will hold the head of the merged list

        // Traverse both lists
        while (list1 != nullptr && list2 != nullptr) {
            if (list1->val < list2->val) {
                newnode->next = list1;  // Link the smaller node
                list1 = list1->next;    // Move to the next node in list1
            } else {
                newnode->next = list2;  // Link the smaller node
                list2 = list2->next;    // Move to the next node in list2
            }
            newnode = newnode->next;    // Move to the next node in the merged list
        }

        // Append any remaining nodes from list1 or list2
        if (list1 != nullptr) {
            newnode->next = list1;
        } else if (list2 != nullptr) {
            newnode->next = list2;
        }

        // Return the head of the merged list (skipping the dummy node)
        return head->next;
    }
};
