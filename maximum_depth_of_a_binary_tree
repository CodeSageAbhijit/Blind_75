/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if (root == nullptr) return 0;

        queue<TreeNode*> elements;
        elements.push(root);
        int nodecountatlevel;
        int nooflevels = 0;

        while (true){
            nodecountatlevel = elements.size();
            if(nodecountatlevel == 0){
                return nooflevels;
            }

            while(nodecountatlevel > 0){
                TreeNode *element = elements.front();
                elements.pop();

                if(element->left != nullptr){
                    elements.push(element->left);
                }
                if(element->right != nullptr){
                    elements.push(element->right);
                }
                nodecountatlevel--;
            }
            nooflevels++;
        }
    }
};
